name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Install root dependencies
        run: npm install

      - name: Install server dependencies
        run: |
          cd server
          npm install
          cd ..

      - name: Create .env file for tests
        run: |
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_USER=root" >> .env
          echo "DB_PASSWORD=password" >> .env
          echo "DB_NAME=testdb" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DIALECT=mysql" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}" >> .env
          echo "JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" >> .env
          echo "JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}" >> .env
          echo "JWT_RESET_SECRET=${{ secrets.JWT_RESET_SECRET }}" >> .env
          echo "JWT_RESET_EXPIRATION=${{ secrets.JWT_RESET_EXPIRATION }}" >> .env
          echo "JWT_2FA_SECRET=${{ secrets.JWT_2FA_SECRET }}" >> .env
          echo "JWT_2FA_EXPIRATION=${{ secrets.JWT_2FA_EXPIRATION }}" >> .env
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env

      - name: Import dump.sql into MySQL
        run: |
          sleep 15
          mysql -h 127.0.0.1 -P 3306 -u root -ppassword testdb < dump.sql

      - name: Run tests
        run: npm test
